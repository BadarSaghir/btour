name: Build & Release Flutter App (No iOS)

on:
  push:
    tags:
      - 'v*' # Matches v followed by anything

jobs:
  build_macos_android:
    runs-on: macos-latest
    outputs:
      tag_version: ${{ steps.tag.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Java JDK 17
        uses: actions/setup-java@v4
        with: { distribution: 'temurin', java-version: '17' }
      
      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with: { channel: 'stable', cache: true }
      
      - name: Install Flutter dependencies
        run: flutter pub get
      
      - name: Get version tag
        id: tag
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      # Android Build
      - name: Build Android APK
        run: flutter build apk --release --build-name=${{ steps.tag.outputs.version }} --build-number=${GITHUB_RUN_NUMBER}
      
      - name: Build Android App Bundle
        run: flutter build appbundle --release --build-name=${{ steps.tag.outputs.version }} --build-number=${GITHUB_RUN_NUMBER}

      # macOS Build
      - name: Enable macOS Desktop
        run: flutter config --enable-macos-desktop
      
      - name: Build macOS Release
        run: flutter build macos --release --build-name=${{ steps.tag.outputs.version }} --build-number=${GITHUB_RUN_NUMBER}
      
      - name: Package macOS App
        run: |
          cd build/macos/Build/Products/Release
          ditto -c -k --sequesterRsrc --keepParent btour.app btour-macos.zip
      
      # Upload Artifacts
      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with: { name: android-apk, path: build/app/outputs/flutter-apk/app-release.apk }
      
      - name: Upload Android AAB
        uses: actions/upload-artifact@v4
        with: { name: android-aab, path: build/app/outputs/bundle/release/app-release.aab }
      
      - name: Upload macOS App
        uses: actions/upload-artifact@v4
        with: { name: macos-app, path: build/macos/Build/Products/Release/btour-macos.zip }

  build_linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with: { channel: 'stable', cache: true }
      
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev
      
      - name: Enable Linux Desktop
        run: flutter config --enable-linux-desktop
      
      - name: Build Linux Release
        run: flutter build linux --release --build-name=${{ needs.build_macos_android.outputs.tag_version }} --build-number=${GITHUB_RUN_NUMBER}
      
      - name: Package Linux Build
        run: |
          cd build/linux/x64/release/bundle
          zip -r ../../../../btour-linux.zip .
      
      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with: { name: linux-app, path: btour-linux.zip }

  build_windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with: { channel: 'stable', cache: true }
      
      - name: Enable Windows Desktop
        run: flutter config --enable-windows-desktop
      
      - name: Build Windows Release
        run: flutter build windows --release --build-name=${{ needs.build_macos_android.outputs.tag_version }} --build-number=${GITHUB_RUN_NUMBER}
      
      - name: Package Windows Build
        run: |
          cd build/windows/runner/Release
          Compress-Archive -Path * -DestinationPath ../../../../btour-windows.zip
      
      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with: { name: windows-app, path: btour-windows.zip }

  create_release:
    runs-on: ubuntu-latest
    needs: [build_macos_android, build_linux, build_windows]
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
          body: |
            Multi-platform release for version ${{ github.ref_name }}
            Includes builds for:
            - Android (APK/AAB)
            - macOS
            - Linux
            - Windows
          files: |
            android-apk/app-release.apk
            android-aab/app-release.aab
            macos-app/btour-macos.zip
            linux-app/btour-linux.zip
            windows-app/btour-windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
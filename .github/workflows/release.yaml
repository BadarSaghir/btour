name: Build & Release Flutter App (No iOS)

on:
  push:
    tags:
      - 'v*' # Matches v followed by anything

jobs:
  # --- Job for macOS and Android ---
  build_macos_android:
    runs-on: macos-latest
    outputs:
      tag_version: ${{ steps.tag.outputs.version }} # Output tag for other jobs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Java JDK 17
        uses: actions/setup-java@v4
        with: { distribution: 'temurin', java-version: '17' }
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with: { ruby-version: '3.0', bundler-cache: true }
      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with: { channel: 'stable', cache: true }
      - name: Install Flutter dependencies
        run: flutter pub get
      - name: Get version tag
        id: tag
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT


      # --- Build macOS ---
      - name: Enable macOS Desktop Support
        run: flutter config --enable-macos-desktop
      - name: Build macOS Release
        run: flutter build macos --release --build-name=${{ steps.tag.outputs.version }} --build-number=${{ github.run_number }}
      - name: Package macOS Release
        run: |
          cd build/macos/Build/Products/Release
          # Ensure 'btour.app' matches your actual app name
          zip -r ../../../../btour-macos.zip btour.app 
          cd ../../../../..

      # --- Build Android ---
      - name: Build Android APK
        run: flutter build apk --release --build-name=${{ steps.tag.outputs.version }} --build-number=${{ github.run_number }}
      - name: Build Android App Bundle (AAB)
        run: flutter build appbundle --release --build-name=${{ steps.tag.outputs.version }} --build-number=${{ github.run_number }}

      # --- Upload macOS/Android Artifacts ---
      - name: Upload Android APK Artifact
        uses: actions/upload-artifact@v4
        with: { name: android-apk, path: build/app/outputs/flutter-apk/app-release.apk }
      - name: Upload Android AAB Artifact
        uses: actions/upload-artifact@v4
        with: { name: android-aab, path: build/app/outputs/bundle/release/app-release.aab }
      - name: Upload macOS ZIP Artifact
        uses: actions/upload-artifact@v4
        with: { name: macos-app, path: btour-macos.zip }

  # --- Job specifically for Linux build ---
  build_linux:
    runs-on: ubuntu-latest
    needs: build_macos_android # Add needs to get tag_version output
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with: { channel: 'stable', cache: true }
      - name: Install Linux build dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
      - name: Enable Linux Desktop Support
        run: flutter config --enable-linux-desktop
      - name: Install Flutter dependencies
        run: flutter pub get
      - name: Run Flutter Doctor for Linux
        run: flutter doctor -v
      - name: Build Linux Release
        # Use version from needs context
        run: flutter build linux --release --build-name=${{ needs.build_macos_android.outputs.tag_version }} --build-number=${{ github.run_number }}
      - name: List Build Output Contents
        run: ls -la build/linux/x64/release/bundle/
      - name: Package Linux Build
        run: |
          cd build/linux/x64/release/bundle
          zip -r ../../../../btour-linux.zip .
          cd ../../../../..
      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with: { name: linux-app, path: btour-linux.zip }

  # --- Job specifically for Windows build ---
  build_windows:
    runs-on: windows-latest
    needs: build_macos_android # Add needs to get tag_version output
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with: { channel: 'stable', cache: true }
      - name: Enable Windows Desktop Support
        run: flutter config --enable-windows-desktop
      - name: Install Flutter dependencies
        run: flutter pub get
      - name: Run Flutter Doctor for Windows
        run: flutter doctor -v
      - name: Build Windows Release
        # Use version from needs context
        run: flutter build windows --release --build-name=${{ needs.build_macos_android.outputs.tag_version }} --build-number=${{ github.run_number }}

      # ****** CORRECTED PATHS BELOW ******
      - name: List Build Output Contents
        # Look inside the x64 directory
        run: Get-ChildItem -Path build\windows\x64\runner\Release\ -Recurse
      - name: Package Windows Build
        # Use the correct path including x64
        run: Compress-Archive -Path build\windows\x64\runner\Release\* -DestinationPath btour-windows.zip -Force
      # ****** END OF CORRECTIONS ******

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with: { name: windows-app, path: btour-windows.zip }

  # --- Job to create the Release (runs after ALL builds) ---
  create_release:
    runs-on: ubuntu-latest
    needs: [build_macos_android, build_linux, build_windows]
    steps:
      # Get version tag using needs context
      - name: Get version tag from needs
        id: tag
        run: echo "version=${{needs.build_macos_android.outputs.tag_version}}" >> $GITHUB_OUTPUT

      - name: Download Artifacts
        uses: actions/download-artifact@v4

      - name: List downloaded artifacts # See directory structure
        run: ls -R

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.build_macos_android.outputs.tag_version }} # Use tag from needs
          name: Release ${{ needs.build_macos_android.outputs.tag_version }} # Use tag from needs
          body: |
            Multi-platform release for version ${{ needs.build_macos_android.outputs.tag_version }}
            Includes builds for:
            - Android (APK/AAB)
            - macOS
            - Linux
            - Windows
          files: |
            android-apk/app-release.apk
            android-aab/app-release.aab
            macos-app/btour-macos.zip
            linux-app/btour-linux.zip
            windows-app/btour-windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}